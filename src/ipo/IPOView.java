/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ipo;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import turnerColorSpace.*;

/**
 *
 * @author s14003024
 */
public class IPOView extends javax.swing.JFrame {

    //Turner Variable Declarations
    private static ArrayList<File> imageFiles;
    private static File outputFolder;
    private static double gammaValue;
    private HashMap<String, Boolean> conversionMap;
    /**
     * Creates new form IPOView
     */
    public IPOView() {
        outputFolder = null;
        imageFiles = new ArrayList<File>();
        conversionMap = new HashMap();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectImageButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        RGBCheck = new javax.swing.JCheckBox();
        rgbCheck = new javax.swing.JCheckBox();
        HSLCheck = new javax.swing.JCheckBox();
        HSVCheck = new javax.swing.JCheckBox();
        HSICheck = new javax.swing.JCheckBox();
        XYZCheck = new javax.swing.JCheckBox();
        LabCheck = new javax.swing.JCheckBox();
        LuvCheck = new javax.swing.JCheckBox();
        LMSCheck = new javax.swing.JCheckBox();
        LAlphaBetaCheck = new javax.swing.JCheckBox();
        ohtaCheck = new javax.swing.JCheckBox();
        rec601Check = new javax.swing.JCheckBox();
        rec709Check = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        gammaField = new javax.swing.JTextField();
        runButton = new javax.swing.JButton();
        outputLocationButton = new javax.swing.JButton();
        outputLocationLabel = new javax.swing.JLabel();
        outputGrayCheck = new javax.swing.JCheckBox();
        outputBinaryCheck = new javax.swing.JCheckBox();
        progressBar = new javax.swing.JProgressBar();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectImageButton.setText("Select Images");
        selectImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Select Channels to Output to Gray:");

        RGBCheck.setText("Red, Green, Blue");

        rgbCheck.setText("RG Chroma (rgb)");

        HSLCheck.setText("SL (HSL)");

        HSVCheck.setText("SV (HSV)");

        HSICheck.setText("SI (HSI)");

        XYZCheck.setText("XYZ");

        LabCheck.setText("L*a*b*");

        LuvCheck.setText("Luv");

        LMSCheck.setText("LMS");

        LAlphaBetaCheck.setText("L Alpha Beta");

        ohtaCheck.setText("Ohta");

        rec601Check.setText("Rec601 YCbCr");

        rec709Check.setText("Rec709 YCbCr");

        jLabel4.setText("Enter Gamma:");

        gammaField.setText("2.2222");

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        outputLocationButton.setText("Select Output Location");
        outputLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputLocationButtonActionPerformed(evt);
            }
        });

        outputLocationLabel.setText("Location");

        outputGrayCheck.setText("Output Gray");

        outputBinaryCheck.setSelected(true);
        outputBinaryCheck.setText("Output Binary");

        cancelButton.setText("Cancel");
        cancelButton.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(outputLocationButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outputLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(outputGrayCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(outputBinaryCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(runButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectImageButton)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HSVCheck)
                                .addGap(58, 58, 58)
                                .addComponent(LMSCheck))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HSICheck)
                                .addGap(62, 62, 62)
                                .addComponent(LAlphaBetaCheck))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RGBCheck)
                                .addGap(18, 18, 18)
                                .addComponent(XYZCheck)
                                .addGap(57, 57, 57)
                                .addComponent(ohtaCheck))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rgbCheck)
                                        .addGap(18, 18, 18)
                                        .addComponent(LabCheck))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HSLCheck)
                                        .addGap(60, 60, 60)
                                        .addComponent(LuvCheck)))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rec709Check)
                                    .addComponent(rec601Check)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(gammaField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectImageButton)
                .addGap(52, 52, 52)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RGBCheck)
                    .addComponent(XYZCheck)
                    .addComponent(ohtaCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rgbCheck)
                    .addComponent(LabCheck)
                    .addComponent(rec601Check))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HSLCheck)
                    .addComponent(LuvCheck)
                    .addComponent(rec709Check))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HSVCheck)
                    .addComponent(LMSCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HSICheck)
                    .addComponent(LAlphaBetaCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gammaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputLocationButton)
                    .addComponent(outputLocationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputGrayCheck)
                    .addComponent(outputBinaryCheck)
                    .addComponent(runButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes()));
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setMultiSelectionEnabled(true);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION){
            imageFiles.addAll(Arrays.asList(fileChooser.getSelectedFiles()));
        }
    }//GEN-LAST:event_selectImageButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        // TODO add your handling code here:
        if (imageFiles == null || outputFolder == null || (!outputGrayCheck.isSelected() && !outputBinaryCheck.isSelected())){
            JOptionPane.showMessageDialog(rootPane, "Please select an Image file and a Destination folder, and select at least one output format");
        } else {
            //Store gamma value
            try {
            gammaValue = Double.parseDouble(gammaField.getText());
            } catch(NumberFormatException e){
                gammaValue = 2.2222;
            }
            //create an arraylist of the colorspaces being used based on the checkboxes
            conversionMap.put("HSI", HSICheck.isSelected());
            conversionMap.put("HSL", HSLCheck.isSelected());
            conversionMap.put("HSV", HSVCheck.isSelected());
            conversionMap.put("LAlphaBeta", LAlphaBetaCheck.isSelected());
            conversionMap.put("LMS", LMSCheck.isSelected());
            conversionMap.put("Lab", LabCheck.isSelected());
            conversionMap.put("Luv", LuvCheck.isSelected());
            conversionMap.put("RGB", RGBCheck.isSelected());
            conversionMap.put("XYZ", XYZCheck.isSelected());
            conversionMap.put("Ohta", ohtaCheck.isSelected());
            conversionMap.put("601", rec601Check.isSelected());
            conversionMap.put("709", rec709Check.isSelected());
            conversionMap.put("rgbChroma", rgbCheck.isSelected());
            //Check how to output conversions (Grayscale and/or Binary
            conversionMap.put("Grayscale", outputGrayCheck.isSelected());
            conversionMap.put("Binary", outputBinaryCheck.isSelected());
            //run through the files to process
            ImageWorker imageWorker = new ImageWorker(imageFiles, outputFolder, conversionMap, gammaValue, progressBar);
            imageWorker.addPropertyChangeListener(new StatusListener(progressBar));
            imageWorker.execute();
        }
    }//GEN-LAST:event_runButtonActionPerformed

    private void outputLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputLocationButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION){
            outputFolder = fileChooser.getSelectedFile();
            outputLocationLabel.setText(outputFolder.getPath());
        }
    }//GEN-LAST:event_outputLocationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IPOView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IPOView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IPOView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IPOView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IPOView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox HSICheck;
    private javax.swing.JCheckBox HSLCheck;
    private javax.swing.JCheckBox HSVCheck;
    private javax.swing.JCheckBox LAlphaBetaCheck;
    private javax.swing.JCheckBox LMSCheck;
    private javax.swing.JCheckBox LabCheck;
    private javax.swing.JCheckBox LuvCheck;
    private javax.swing.JCheckBox RGBCheck;
    private javax.swing.JCheckBox XYZCheck;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField gammaField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JCheckBox ohtaCheck;
    private javax.swing.JCheckBox outputBinaryCheck;
    private javax.swing.JCheckBox outputGrayCheck;
    private javax.swing.JButton outputLocationButton;
    private javax.swing.JLabel outputLocationLabel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JCheckBox rec601Check;
    private javax.swing.JCheckBox rec709Check;
    private javax.swing.JCheckBox rgbCheck;
    private javax.swing.JButton runButton;
    private javax.swing.JButton selectImageButton;
    // End of variables declaration//GEN-END:variables
}
